-- +migrate Up 
CREATE TABLE CHESSCLUB (
    CHESSCLUBNAME VARCHAR(15) NOT NULL,
    CITY          CHAR(15)    NOT NULL,
    ADDRESSLINE1  VARCHAR(25) NOT NULL,
    POSTALCODE    VARCHAR(6)  NOT NULL,
    CHAIRMAN      VARCHAR(30) NOT NULL,
    SECRETARY     VARCHAR(30) NOT NULL,
    EMAILADDRESS  VARCHAR(30) NOT NULL,
    CONSTRAINT PK_CHESSCLUB PRIMARY KEY NONCLUSTERED (CHESSCLUBNAME)
);

-- +migrate Up 
CREATE TABLE PLAYER (
    PLAYERID      INT         NOT NULL,
    CHESSCLUBNAME VARCHAR(15) NULL,
    FIRSTNAME     VARCHAR(10) NOT NULL,
    LASTNAME      VARCHAR(20) NOT NULL,
    ADDRESSLINE1  VARCHAR(25) NOT NULL,
    POSTALCODE    VARCHAR(6)  NOT NULL,
    CITY          CHAR(15)    NOT NULL,
    BIRTHDATE     DATETIME    NOT NULL,
    EMAILADDRESS  VARCHAR(30) NOT NULL,
    CONSTRAINT PK_PLAYER PRIMARY KEY NONCLUSTERED (PLAYERID),
    CONSTRAINT FK_PLAYER_PLAYER_IN_CHESSCLU FOREIGN KEY (CHESSCLUBNAME)
    REFERENCES CHESSCLUB (CHESSCLUBNAME)
);

-- +migrate Up 
CREATE TABLE TOURNAMENT_ROUND (
    CHESSCLUBNAME  VARCHAR(15) NOT NULL,
    TOURNAMENTNAME VARCHAR(50) NOT NULL,
    ROUNDNUMBER    INT         NOT NULL,
    STARTS         DATETIME    NOT NULL,
    ENDS           DATETIME    NOT NULL,
    CONSTRAINT PK_TOURNAMENT_ROUND PRIMARY KEY NONCLUSTERED (CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER)
);

-- +migrate Up 
CREATE TABLE POULE (
    CHESSCLUBNAME  VARCHAR(15) NOT NULL,
    TOURNAMENTNAME VARCHAR(50) NOT NULL,
    ROUNDNUMBER    INT         NOT NULL,
    POULENO        INT         NOT NULL,
    CONSTRAINT PK_POULE PRIMARY KEY NONCLUSTERED (CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER, POULENO),
    CONSTRAINT FK_POULE_TOURNAMEN_TOURNAME FOREIGN KEY (CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER)
    REFERENCES TOURNAMENT_ROUND (CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER)
);

-- +migrate Up 
CREATE TABLE CHESSMATCH (
    MATCHNO        INT         NOT NULL,
    CHESSCLUBNAME  VARCHAR(15) NOT NULL,
    TOURNAMENTNAME VARCHAR(50) NOT NULL,
    ROUNDNUMBER    INT         NOT NULL,
    POULENO        INT         NOT NULL,
    PLAYERIDBLACK  INT         NOT NULL,
    PLAYERIDWHITE  INT         NOT NULL,
    RESULT         CHAR(6)     NOT NULL,
    CONSTRAINT PK_CHESSMATCH PRIMARY KEY NONCLUSTERED (MATCHNO),
    CONSTRAINT FK_CHESSMAT_BLACK_PLA_PLAYER FOREIGN KEY (PLAYERIDWHITE)
    REFERENCES PLAYER (PLAYERID),
    CONSTRAINT FK_CHESSMAT_WHITE_PLA_PLAYER FOREIGN KEY (PLAYERIDBLACK)
    REFERENCES PLAYER (PLAYERID),
    CONSTRAINT FK_CHESSMAT_CHESSMATC_POULE FOREIGN KEY (CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER, POULENO)
    REFERENCES POULE (CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER, POULENO)
);

-- +migrate Up 
CREATE INDEX BLACK_PLAYER_OF_MATCH_FK
    ON CHESSMATCH (
        PLAYERIDWHITE ASC
    );

-- +migrate Up 
CREATE INDEX WHITE_PLAYER_OF_MATCH_FK
    ON CHESSMATCH (
        PLAYERIDBLACK ASC
    );

-- +migrate Up 
CREATE INDEX CHESSMATCH_OF_POULE_FK
    ON CHESSMATCH (
        CHESSCLUBNAME ASC,
        TOURNAMENTNAME ASC,
        ROUNDNUMBER ASC,
        POULENO ASC
    );

-- +migrate Up 
CREATE TABLE CONTACTPERSON (
    CONTACTNAME  VARCHAR(30) NOT NULL,
    EMAILADDRESS VARCHAR(30) NOT NULL,
    PHONENUMBER  NUMERIC(15) NOT NULL,
    CONSTRAINT PK_CONTACTPERSON PRIMARY KEY NONCLUSTERED (CONTACTNAME)
);

-- +migrate Up 
CREATE INDEX PLAYER_IN_CLUB_FK
    ON PLAYER (
        CHESSCLUBNAME ASC
    );

-- +migrate Up 
CREATE INDEX TOURNAMENT_ROUND_IN_POULE_FK
    ON POULE (
        CHESSCLUBNAME ASC,
        TOURNAMENTNAME ASC,
        ROUNDNUMBER ASC
    );

-- +migrate Up 
CREATE TABLE ROUND_ROBIN_POULE (
    CHESSCLUBNAME  VARCHAR(15) NOT NULL,
    TOURNAMENTNAME VARCHAR(50) NOT NULL,
    ROUNDNUMBER    INT         NOT NULL,
    POULENO        INT         NOT NULL,
    CONSTRAINT PK_ROUND_ROBIN_POULE PRIMARY KEY (CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER, POULENO),
    CONSTRAINT FK_ROUND_RO_IS_A_POUL_POULE FOREIGN KEY (CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER, POULENO)
    REFERENCES POULE (CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER, POULENO)
);

-- +migrate Up 
CREATE TABLE TOURNAMENT (
    CHESSCLUBNAME    VARCHAR(15)   NOT NULL,
    TOURNAMENTNAME   VARCHAR(50)   NOT NULL,
    PLAYERID         INT           NULL,
    CONTACTNAME      VARCHAR(30)   NOT NULL,
    STARTS           DATETIME      NOT NULL,
    ENDS             DATETIME      NOT NULL,
    REGISTRATIONFEE  NUMERIC(8, 2) NOT NULL,
    ADDRESSLINE1     VARCHAR(25)   NOT NULL,
    POSTALCODE       VARCHAR(6)    NOT NULL,
    CITY             CHAR(15)      NOT NULL,
    REGISTRATIONTIME TIMESTAMP     NOT NULL,
    CONSTRAINT PK_TOURNAMENT PRIMARY KEY NONCLUSTERED (CHESSCLUBNAME, TOURNAMENTNAME),
    CONSTRAINT FK_TOURNAME_TOURNAMEN_CHESSCLU FOREIGN KEY (CHESSCLUBNAME)
    REFERENCES CHESSCLUB (CHESSCLUBNAME),
    CONSTRAINT FK_TOURNAME_CONTACTPE_CONTACTP FOREIGN KEY (CONTACTNAME)
    REFERENCES CONTACTPERSON (CONTACTNAME),
    CONSTRAINT FK_TOURNAME_WINNER_OF_PLAYER FOREIGN KEY (PLAYERID)
    REFERENCES PLAYER (PLAYERID)
);

-- +migrate Up 
CREATE TABLE SPONSOR (
    CHESSCLUBNAME  VARCHAR(15) NOT NULL,
    TOURNAMENTNAME VARCHAR(50) NOT NULL,
    CONTACTNAME    VARCHAR(30) NOT NULL,
    CONSTRAINT PK_SPONSOR PRIMARY KEY NONCLUSTERED (CHESSCLUBNAME, TOURNAMENTNAME),
    CONSTRAINT FK_SPONSOR_SPONSOR_O_TOURNAME FOREIGN KEY (CHESSCLUBNAME, TOURNAMENTNAME)
    REFERENCES TOURNAMENT (CHESSCLUBNAME, TOURNAMENTNAME),
    CONSTRAINT FK_SPONSOR_CONTACTPE_CONTACTP FOREIGN KEY (CONTACTNAME)
    REFERENCES CONTACTPERSON (CONTACTNAME)
);

-- +migrate Up 
CREATE INDEX SPONSOR_OF_TOURNAMENT_FK
    ON SPONSOR (
        CHESSCLUBNAME ASC,
        TOURNAMENTNAME ASC
    );

-- +migrate Up 
CREATE INDEX CONTACTPERSON_OF_SPONSOR_FK
    ON SPONSOR (
        CONTACTNAME ASC
    );

-- +migrate Up 
CREATE INDEX TOURNAMENT_OF_CHESSCLUB_FK
    ON TOURNAMENT (
        CHESSCLUBNAME ASC
    );

-- +migrate Up 
CREATE INDEX CONTACTPERSON_OF_TOURNAMENT_FK
    ON TOURNAMENT (
        CONTACTNAME ASC
    );

-- +migrate Up 
CREATE INDEX WINNER_OF_TOURNAMENT_FK
    ON TOURNAMENT (
        PLAYERID ASC
    );

-- +migrate Up 
CREATE TABLE TOURNAMENT_PLAYER (
    CHESSCLUBNAME  VARCHAR(15) NOT NULL,
    TOURNAMENTNAME VARCHAR(50) NOT NULL,
    PLAYERID       INT         NOT NULL,
    PAID           SMALLINT    NOT NULL,
    CONSTRAINT PK_TOURNAMENT_PLAYER PRIMARY KEY NONCLUSTERED (CHESSCLUBNAME, TOURNAMENTNAME, PLAYERID),
    CONSTRAINT FK_TOURNAME_PLAYER_FR_TOURNAME FOREIGN KEY (CHESSCLUBNAME, TOURNAMENTNAME)
    REFERENCES TOURNAMENT (CHESSCLUBNAME, TOURNAMENTNAME),
    CONSTRAINT FK_TOURNAME_TOURNAMEN_PLAYER FOREIGN KEY (PLAYERID)
    REFERENCES PLAYER (PLAYERID)
);

-- +migrate Up 
CREATE INDEX PLAYER_FROM_TOURNAMENT_FK
    ON TOURNAMENT_PLAYER (
        CHESSCLUBNAME ASC,
        TOURNAMENTNAME ASC
    );

-- +migrate Up 
CREATE INDEX TOURNAMENT_FROM_PLAYER_FK
    ON TOURNAMENT_PLAYER (
        PLAYERID ASC
    );

-- +migrate Up 
CREATE TABLE TOURNAMENT_PLAYER_OF_POULE (
    CHESSCLUBNAME      VARCHAR(15) NOT NULL,
    TOU_TOURNAMENTNAME VARCHAR(50) NOT NULL,
    PLAYERID           INT         NOT NULL,
    POU_CHESSCLUBNAME  VARCHAR(15) NOT NULL,
    TOURNAMENTNAME     VARCHAR(50) NOT NULL,
    ROUNDNUMBER        INT         NOT NULL,
    POULENO            INT         NOT NULL,
    CONSTRAINT PK_TOURNAMENT_PLAYER_OF_POULE PRIMARY KEY NONCLUSTERED (CHESSCLUBNAME, TOU_TOURNAMENTNAME, PLAYERID, POU_CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER, POULENO),
    CONSTRAINT FK_TOURNAME_TOURNAMEN_POULE FOREIGN KEY (POU_CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER, POULENO)
    REFERENCES POULE (CHESSCLUBNAME, TOURNAMENTNAME, ROUNDNUMBER, POULENO)
);

-- +migrate Up 
CREATE INDEX TOURNAMENT_PLAYER_OF_POULE_FK
    ON TOURNAMENT_PLAYER_OF_POULE (
        POU_CHESSCLUBNAME ASC,
        TOURNAMENTNAME ASC,
        ROUNDNUMBER ASC,
        POULENO ASC
    );

-- +migrate Up 
CREATE INDEX TOURNAMENT_PLAYER_OF_POULE2_FK
    ON TOURNAMENT_PLAYER_OF_POULE (
        CHESSCLUBNAME ASC,
        TOU_TOURNAMENTNAME ASC,
        PLAYERID ASC
    );

-- +migrate Up 
CREATE INDEX TOURNAMENT_ROUND_OF_TOURNAMENT_FK
    ON TOURNAMENT_ROUND (
        CHESSCLUBNAME ASC,
        TOURNAMENTNAME ASC
    );

-- +migrate Down
ALTER TABLE PLAYER
    DROP CONSTRAINT FK_PLAYER_PLAYER_IN_CHESSCLU;
-- +migrate Down
ALTER TABLE POULE
    DROP CONSTRAINT FK_POULE_TOURNAMEN_TOURNAME;
-- +migrate Down
ALTER TABLE ROUND_ROBIN_POULE
    DROP CONSTRAINT FK_ROUND_RO_IS_A_POUL_POULE;
-- +migrate Down
ALTER TABLE TOURNAMENT
    DROP CONSTRAINT FK_TOURNAME_TOURNAMEN_CHESSCLU;
-- +migrate Down
ALTER TABLE TOURNAMENT_PLAYER_OF_POULE
    DROP CONSTRAINT FK_TOURNAME_TOURNAMEN_POULE;
-- +migrate Down
ALTER TABLE SPONSOR
    DROP CONSTRAINT FK_SPONSOR_CONTACTPE_CONTACTP,
                    FK_SPONSOR_SPONSOR_O_TOURNAME;
-- +migrate Down
ALTER TABLE CHESSMATCH
    DROP CONSTRAINT FK_CHESSMAT_BLACK_PLA_PLAYER,
                    FK_CHESSMAT_WHITE_PLA_PLAYER;

-- +migrate Down
DROP INDEX CHESSMATCH.CHESSMATCH_OF_POULE_FK;
-- +migrate Down
DROP INDEX CHESSMATCH.WHITE_PLAYER_OF_MATCH_FK;
-- +migrate Down
DROP INDEX CHESSMATCH.BLACK_PLAYER_OF_MATCH_FK;
-- +migrate Down
DROP INDEX PLAYER.PLAYER_IN_CLUB_FK;
-- +migrate Down
DROP INDEX POULE.TOURNAMENT_ROUND_IN_POULE_FK;
-- +migrate Down
DROP INDEX SPONSOR.CONTACTPERSON_OF_SPONSOR_FK;
-- +migrate Down
DROP INDEX SPONSOR.SPONSOR_OF_TOURNAMENT_FK;
-- +migrate Down
DROP INDEX TOURNAMENT.WINNER_OF_TOURNAMENT_FK;
-- +migrate Down
DROP INDEX TOURNAMENT.CONTACTPERSON_OF_TOURNAMENT_FK;
-- +migrate Down
DROP INDEX TOURNAMENT.TOURNAMENT_OF_CHESSCLUB_FK;
-- +migrate Down
DROP INDEX TOURNAMENT_PLAYER.TOURNAMENT_FROM_PLAYER_FK;
-- +migrate Down
DROP INDEX TOURNAMENT_PLAYER.PLAYER_FROM_TOURNAMENT_FK;
-- +migrate Down
DROP INDEX TOURNAMENT_PLAYER_OF_POULE.TOURNAMENT_PLAYER_OF_POULE2_FK;
-- +migrate Down
DROP INDEX TOURNAMENT_PLAYER_OF_POULE.TOURNAMENT_PLAYER_OF_POULE_FK;
-- +migrate Down
DROP INDEX TOURNAMENT_ROUND.TOURNAMENT_ROUND_OF_TOURNAMENT_FK;

-- +migrate Down
DROP TABLE TOURNAMENT_ROUND;
-- +migrate Down
DROP TABLE TOURNAMENT_PLAYER;
-- +migrate Down
DROP TABLE TOURNAMENT_PLAYER_OF_POULE;
-- +migrate Down
DROP TABLE TOURNAMENT;
-- +migrate Down
DROP TABLE CHESSCLUB;
-- +migrate Down
DROP TABLE CHESSMATCH;
-- +migrate Down
DROP TABLE CONTACTPERSON;
-- +migrate Down
DROP TABLE POULE;
-- +migrate Down
DROP TABLE SPONSOR;
-- +migrate Down
DROP TABLE ROUND_ROBIN_POULE;
-- +migrate Down
DROP TABLE PLAYER;
